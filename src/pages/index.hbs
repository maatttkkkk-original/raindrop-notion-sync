<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Raindrop/Notion Sync</title>
  
  <!-- CSS Files -->
  <link rel="stylesheet" href="/public/styles/design-system.css">
  <link rel="stylesheet" href="/public/styles/dashboard.css">
  <link rel="stylesheet" href="/public/styles/components.css">
</head>
<body>
  <div class="container">
    <main class="dashboard" role="main">
      <!-- Status Indicator -->
      <div 
        id="status-indicator" 
        class="status-indicator not-synced" 
        role="img" 
        aria-label="Sync status indicator"
      ></div>
      
      <!-- Title -->
      <h1 class="dashboard-title text-huge text-primary">
        Raindrop/Notion Sync
      </h1>
      
      <!-- Count Displays -->
      <div class="count-display loading" id="raindrop-display">
        <span class="text-huge" id="raindrop-count">...</span>
        <span class="text-huge"> Raindrop Bookmarks</span>
      </div>
      
      <div class="count-display loading" id="notion-display">
        <span class="text-huge" id="notion-count">...</span>
        <span class="text-huge"> Notion Pages</span>
      </div>
      
      <!-- Status Message -->
      <div 
        id="status-message" 
        class="status-message calculating text-huge" 
        role="status" 
        aria-live="polite"
      >
        Calculating sync status...
      </div>
      
      <!-- Error Message -->
      <div id="error-message" class="error-message d-none" role="alert">
        <p>Failed to load sync status.</p>
        <button id="retry-button" class="retry-button" type="button">
          Retry
        </button>
      </div>
      
      <!-- Action Buttons -->
      <div class="dashboard-actions" role="navigation" aria-label="Sync actions">
        <a 
          href="/sync?password={{password}}&mode=new" 
          class="action-button primary"
          id="sync-new-button"
        >
          Sync New â†»
        </a>
        
        <a 
          href="/sync-all?password={{password}}" 
          class="action-button secondary"
          id="full-sync-button"
        >
          Reset / FullSync
        </a>
      </div>
      
      <!-- Decorative Lines -->
      <div class="decorative-lines" aria-hidden="true">
        <div class="decorative-line"></div>
        <div class="decorative-line"></div>
        <div class="decorative-line"></div>
        <div class="decorative-line"></div>
        <div class="decorative-line"></div>
        <div class="decorative-line"></div>
        <div class="decorative-line"></div>
        <div class="decorative-line"></div>
      </div>
    </main>
  </div>
  
  <!-- JavaScript -->
  <script src="/public/scripts/utils.js"></script>
  <script src="/public/scripts/dashboard.js"></script>
  
  <script>
    // Fixed initialization - wait for scripts to load
    document.addEventListener('DOMContentLoaded', function() {
      const password = '{{password}}';
      
      // Simple loading function if dashboard manager doesn't exist
      if (!window.dashboardManager) {
        console.log('Dashboard manager not found, using simple loading');
        loadCountsSimple(password);
      }
    });
    
    // Simple fallback function
    async function loadCountsSimple(password) {
      try {
        const response = await fetch(`/api/counts?password=${encodeURIComponent(password)}`);
        const data = await response.json();
        
        // Update counts
        document.getElementById('raindrop-count').textContent = data.raindropTotal.toLocaleString();
        document.getElementById('notion-count').textContent = data.notionTotal.toLocaleString();
        
        // Update status
        const difference = Math.abs(data.raindropTotal - data.notionTotal);
        const isSynced = difference <= 5;
        
        const statusIndicator = document.getElementById('status-indicator');
        const statusMessage = document.getElementById('status-message');
        
        if (isSynced) {
          statusIndicator.classList.remove('not-synced');
          statusIndicator.classList.add('synced');
          statusMessage.textContent = 'All bookmarks are synchronized';
          statusMessage.className = 'status-message synced text-huge';
        } else {
          statusMessage.textContent = `${difference.toLocaleString()} bookmarks need synchronization`;
          statusMessage.className = 'status-message not-synced text-huge';
        }
        
        // Remove loading states
        document.getElementById('raindrop-display').classList.remove('loading');
        document.getElementById('notion-display').classList.remove('loading');
        
      } catch (error) {
        console.error('Failed to load counts:', error);
        document.getElementById('raindrop-count').textContent = 'Error';
        document.getElementById('notion-count').textContent = 'Error';
        document.getElementById('status-message').textContent = 'Failed to load sync status';
        
        // Show error message
        document.getElementById('error-message').classList.remove('d-none');
        document.getElementById('retry-button').addEventListener('click', () => {
          location.reload();
        });
      }
    }
  </script>
</body>
</html>